
input CreateWinningSequenceInput {
    numbers: [Int]
    stars: [Int]
  
   
}

input UpdateWinningSequenceInput {
    numbers: [Int]
    stars: [Int]
   
    
}


type WinningSequence{
    _id: ID!
    numbers: [Int]
    stars: [Int]
    createdAt: Date
    updatedAt: Date
    deletedAt: Date
   
}

type Query {
    getAllWinningSequences: [WinningSequence]
    getAllWinningSequencesByDate(createdAt:String):[WinningSequence] 
    getAllWinningSequencesByRange(startedAt:String, endedAt:String):[WinningSequence] 
    getWinningSequneceById(_id:ID!):[WinningSequence] @isAuthenticated

}

type Mutation {
    createWinningSequence(input: CreateWinningSequenceInput!): WinningSequence @isAuthenticated
    deleteWinningSequence(_id: ID!): Boolean @isAuthenticated
    updateWinningSequence( _id:ID! , input: UpdateWinningSequenceInput): Boolean @isAuthenticated
}